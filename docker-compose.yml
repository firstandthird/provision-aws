nginx:
  container_name: 'nginx'
  image: 'firstandthird/nginx'
  restart: 'always'
  log_driver: 'awslogs'
  log_opt:
    awslogs-region: '${AWS_REGION}'
    awslogs-group: '${LOG_GROUP_LB}'
    awslogs-stream: '${SERVER_NAME}-nginx'
  volumes:
    - '/etc/nginx/conf.d'
    - '/etc/certs:/etc/nginx/certs:ro'
    - '/usr/share/nginx/html'
    - '/etc/nginx/vhost.d'
  ports:
    - '80:80'
    - '443:443'
dockergen:
  container_name: 'docker-gen'
  image: 'firstandthird/nginx-gen:0.0.2'
  restart: 'always'
  log_driver: 'awslogs'
  log_opt:
    awslogs-region: '${AWS_REGION}'
    awslogs-group: '${LOG_GROUP}'
    awslogs-stream: '${SERVER_NAME}-docker-gen'
  volumes_from:
    - 'nginx'
  volumes:
    - '/var/run/docker.sock:/tmp/docker.sock:ro'
letsencrypt:
  image: 'jrcs/letsencrypt-nginx-proxy-companion'
  container_name: 'letsencrypt'
  log_driver: 'awslogs'
  log_opt:
    awslogs-region: '${AWS_REGION}'
    awslogs-group: '${LOG_GROUP}'
    awslogs-stream: '${SERVER_NAME}-letsencrypt'
  volumes:
    - '/var/run/docker.sock:/var/run/docker.sock:ro'
    - '/etc/certs/:/etc/nginx/certs:rw'
  volumes_from:
    - 'nginx'
  environment:
    NGINX_DOCKER_GEN_CONTAINER: 'docker-gen'
    #DEBUG: 'true'
deploy:
  container_name: 'deploy'
  image: 'shipment/deploy:0.0.10'
  restart: 'always'
  environment:
    VIRTUAL_HOST: 'deploy.${DOMAIN}'
    ROOT_HOST: '${DOMAIN}'
    NODE_ENV: '${NODE_ENV}'
    GH_USERNAME: '${GH_USER}'
    GH_TOKEN: '${GH_TOKEN}'
    SECRET: '${DEPLOY_SECRET}'
    ENVIRONMENT: '${ENVIRONMENT}'
    SERVER_NAME: '${SERVER_NAME}'
    LOG_GROUP: '${LOG_GROUP}'
    BRANCH_WHITELIST: '${AUTO_DEPLOY_BRANCH}'
    SLACK: '${AUTO_DEPLOY_SLACK}'
    PORT: 5000
  log_driver: 'awslogs'
  log_opt:
    awslogs-region: '${AWS_REGION}'
    awslogs-group: '${LOG_GROUP}'
    awslogs-stream: '${SERVER_NAME}-deploy'
  ports:
    - '5000'
  volumes:
    - '/var/run/docker.sock:/var/run/docker.sock'
mongo:
  container_name: 'mongo'
  restart: 'always'
  image: 'mongo:3.2'
  command: '--storageEngine wiredTiger'
  volumes:
    - '/data/db:/data/db'
  ports:
    - '27017:27017'
  log_driver: 'awslogs'
  log_opt:
    awslogs-region: '${AWS_REGION}'
    awslogs-group: '${LOG_GROUP}'
    awslogs-stream: '${SERVER_NAME}-mongo'
mysql:
  container_name: 'mysql'
  restart: 'always'
  image: 'mysql:5.7'
  volumes:
    - '/data/mysql:/var/lib/mysql'
  environment:
    MYSQL_ROOT_PASSWORD: '${MYSQL_PASS}'
    MYSQL_DATABASE: '${MYSQL_DB}'
  ports:
    - '3306:3306'
  log_driver: 'awslogs'
  log_opt:
    awslogs-region: '${AWS_REGION}'
    awslogs-group: '${LOG_GROUP}'
    awslogs-stream: '${SERVER_NAME}-mysql'
